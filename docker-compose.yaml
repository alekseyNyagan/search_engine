services:
  search_app:
    build:
      context: .
    container_name: search_app
    depends_on:
      search_db:
        condition: service_healthy
      logstash:
        condition: service_healthy
    ports:
      - "8080:8080"
    environment:
      - DB_HOST=jdbc:postgresql
      - DB_PORT=//search_db:5432
      - SCHEMA_NAME=search_engine
      - DB_USERNAME=postgres
      - DB_USER_PASSWORD=testtest
      - BOOTSTRAP_SERVER=kafka:9092
      - ELASTICSEARCH_URI=elasticsearch:9200

  search_db:
    image: postgres:14.5-alpine
    container_name: search_db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=testtest
      - POSTGRES_DB=search_engine
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d search_engine -U postgres"]
      retries: 10
      timeout: 5s
    ports:
      - "5432:5432"

  elasticsearch:
    build: elk/elasticsearch/
    container_name: elasticsearch
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
      - xpack.security.enabled=false
      - discovery.type=single-node
      - network.host=0.0.0.0
    volumes:
      - esdata:/usr/share/elasticsearch/data

  logstash:
    build: elk/logstash/
    container_name: logstash
    command: -f /etc/logstash/conf.d/
    volumes:
      - ./elk/logstash/config:/etc/logstash/conf.d
    ports:
      - "9999:9999"
    healthcheck:
      test: bin/logstash -t
      interval: 60s
      timeout: 50s
      retries: 5
    depends_on:
      - elasticsearch

  kibana:
    build: elk/kibana/
    container_name: kibana
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    restart: on-failure
    depends_on:
      - elasticsearch

  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "logs:1:1"

  pgadmin:
    image: dpage/pgadmin4:8.14.0
    restart: "no"
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
      PGADMIN_CONFIG_SERVER_MODE: "False"
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: "False"
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:80/misc/ping || exit -1
      interval: 10s
      timeout: 5s
      start_period: 10s
      retries: 5

volumes:
  esdata:
  pgadmin_data: